definitions:
  create_segment.Response:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  create_user.Request:
    properties:
      addedSeg:
        items:
          type: string
        type: array
      removeSeg:
        items:
          type: string
        type: array
      userID:
        type: string
    required:
    - userID
    type: object
  create_user.Response:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  delete_segment.Response:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  delete_user.Response:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  segment_list.Response:
    properties:
      error:
        type: string
      segmentList:
        items:
          type: string
        type: array
      status:
        type: string
    type: object
  segment_users.Response:
    properties:
      error:
        type: string
      status:
        type: string
      userList:
        items:
          type: string
        type: array
    type: object
  user_list.Response:
    properties:
      error:
        type: string
      status:
        type: string
      userList:
        items:
          type: string
        type: array
    type: object
  user_log.Response:
    properties:
      error:
        type: string
      status:
        type: string
    type: object
  user_segments.Response:
    properties:
      error:
        type: string
      segments:
        items:
          type: string
        type: array
      status:
        type: string
    type: object
host: localhost:8002
info:
  contact:
    email: feodor200@mail.ru
    name: GhostikGH
    url: https://t.me/GhostikGH
  description: Segmentation for A_B tests
  title: Avito Intership (Backend)
  version: "1.0"
paths:
  /log/{user_id}:
    get:
      description: Лог пользователя за все время
      operationId: user-log
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/octet-stream
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_log.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/user_log.Response'
      summary: Лог пользователя
      tags:
      - Log
  /segment:
    get:
      consumes:
      - application/json
      description: Получения списка всех сегментов
      operationId: segment-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/segment_list.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/segment_list.Response'
      summary: Получения списка всех сегментов
      tags:
      - Segment
  /segment/{segment}:
    delete:
      consumes:
      - application/json
      description: Удаление сегмента
      operationId: segment-deletion
      parameters:
      - description: segment name
        in: path
        name: name
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delete_segment.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/delete_segment.Response'
      summary: Удаление сегмента
      tags:
      - Segment
    get:
      consumes:
      - application/json
      description: Получение всех пользователей в данном сегменте
      operationId: segment-user-list
      parameters:
      - description: segment name
        in: path
        name: segment
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/segment_users.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/segment_users.Response'
      summary: Получение всех пользователей в данном сегменте
      tags:
      - Segment
  /segment/{segment}/{percentage}:
    post:
      consumes:
      - application/json
      description: Создание сегмента
      operationId: segment-creation
      parameters:
      - description: segment name
        in: path
        name: segment
        required: true
        type: string
      - description: percentage
        in: path
        name: percentage
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/create_segment.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/create_segment.Response'
      summary: Создание сегмента
      tags:
      - Segment
  /user:
    get:
      consumes:
      - application/json
      description: Получения списка всех пользователей
      operationId: user-list
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_list.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/user_list.Response'
      summary: Получения списка всех пользователей
      tags:
      - User
    post:
      consumes:
      - application/json
      description: Изменяет состояние сегментов у пользователя, если пользователя
        нет, то он созадется
      operationId: create-user
      parameters:
      - description: user update data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/create_user.Request'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/create_user.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/create_user.Response'
      summary: Изменение сегментов у одного пользователя
      tags:
      - User
  /user/{user_id}:
    delete:
      consumes:
      - application/json
      description: Удаление пользователя
      operationId: user-deletion
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/delete_user.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/delete_user.Response'
      summary: Удаление пользователя
      tags:
      - User
    get:
      consumes:
      - application/json
      description: Получение всех сегментов данного пользователя
      operationId: user-segment-list
      parameters:
      - description: user id
        in: path
        name: user_id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/user_segments.Response'
        default:
          description: ""
          schema:
            $ref: '#/definitions/user_segments.Response'
      summary: Получение всех сегментов данного пользователя
      tags:
      - User
swagger: "2.0"
